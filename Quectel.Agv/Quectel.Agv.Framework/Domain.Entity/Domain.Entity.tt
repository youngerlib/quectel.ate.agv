<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ Assembly name="System.Core" #>
<#@ Assembly name="System.Data.dll" #>
<#@ Assembly name="System.Data.DataSetExtensions.dll" #>
<#@ Assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" encoding="utf-8" #>
<#@ include file="$(ProjectDir)MultipleOutputHelper.ttinclude" #>

<# var manager = new Manager(Host, GenerationEnvironment, true); #>
<# var templateFileDirectory= Path.GetDirectoryName(Host.TemplateFile); #> //获取当前模板所在路径
<# var projectPath = Host.ResolveAssemblyReference("$(ProjectDir)"); #>  //获取当前项目路径 
<# var solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)"); #>  //获取解决方案路径
<# var projectName = "Quectel.Agv"; #> //项目名称 
<# var domainName = "VisionInspection"; #> //Domain名称

<# 
	var genNames = File.ReadLines(projectPath+"\\DomainConfig.txt");
	var OutputPath1 = solutionsPath + "\\" + projectName + ".Domain\\" + domainName + "\\Entity";
	if (!Directory.Exists(OutputPath1))
	{
	    Directory.CreateDirectory(OutputPath1);
	}
#>
<#
foreach (string genName in genNames) {
	if((genNames != null) && (genName.Trim().Length > 0)){
		manager.StartBlock(genName+".cs",OutputPath1);//文件名

#>
using <#=projectName#>.Entity.Base;
using SqlSugar;
using System;

namespace <#=projectName#>.Domain.<#= domainName #>.Entity
{
    /// <summary>
    /// 菜单信息表
    /// </summary>
    [SugarTable("<#= domainName #>_<#=genName#>")]
    public class <#=genName#> 
    {

    }
}
 
<#
		manager.EndBlock(); 
		}	
   }
  manager.Process(true,false);
#>